<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wiki.zex.cloud.example.mapper.QaQuestionMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="wiki.zex.cloud.example.entity.QaQuestion">
        <id column="id" property="id"/>
        <result column="question_store_id" property="questionStoreId"/>
        <result column="question_type" property="questionType"/>
        <result column="question_content" property="questionContent"/>
        <result column="question_answer" property="questionAnswer"/>
        <result column="question_answer_items" property="questionAnswerItems"/>
        <result column="question_score" property="questionScore"/>
        <result column="create_at" property="createAt"/>
        <result column="del_flag" property="delFlag"/>
    </resultMap>
    <select id="randomQuestions" resultType="wiki.zex.cloud.example.entity.QaQuestion">
        select qq.id,
               qq.question_store_id,
               qq.question_type,
               qq.question_content,
               qq.question_answer_items,
               qq.question_answer,
               qq.question_score,
               qq.create_at,
               qq.del_flag,
               count(qd.id) answer_count
        from qa_question qq
                 left join qa_driver_pager_answer qd on qd.driver_id = #{driverId} and qd.question_id = qq.id
        where qq.question_store_id = #{questionStoreId}
        group by qq.id
        order by answer_count,rand()
        limit #{questionCount}
    </select>

</mapper>
